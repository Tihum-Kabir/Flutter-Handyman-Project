rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Public read‑only collection for listing available handymen
    match /handymen/{handymanId} {
      allow read: if true;      // anyone can list and view handymen
      allow write: if false;    // disallow client writes to the handymen collection
    }

    // Each user can read and update only their own profile document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Orders collection: users create orders for themselves;
    // both the order’s user and the assigned handyman can read and update
    match /orders/{orderId} {
      // Create: authenticated user creating an order on their own behalf
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Read/Update/Delete: owner or assigned handyman
      allow read, update, delete: if request.auth != null &&
        (resource.data.userId == request.auth.uid ||
         resource.data.handymanId == request.auth.uid);
    }

    // Fallback rule: deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}